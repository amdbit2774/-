#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–º —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞
"""

import requests
import json
import time
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "7493745933:AAF8WpI25Q4I04htDsyowSzrUYbgmee5OVk"
STORY_PROMPT_FILE = Path(__file__).parent / "story_prompt.txt"

def send_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram API"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": chat_id,
        "text": text
    }
    response = requests.post(url, json=data)
    return response.json()

def get_updates(offset=0):
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates"
    params = {
        "offset": offset,
        "timeout": 30
    }
    response = requests.get(url, params=params)
    return response.json()

def write_story_prompt(new_prompt):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –≤ —Ñ–∞–π–ª"""
    try:
        with open(STORY_PROMPT_FILE, 'w', encoding='utf-8') as f:
            f.write(new_prompt)
        logging.info(f"–ü—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω. –î–ª–∏–Ω–∞: {len(new_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
        return True
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–º–ø—Ç–∞: {e}")
        return False

def run_story_step():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç"""
    import subprocess
    try:
        result = subprocess.run(['python3', 'telegram_poster.py'], 
                              capture_output=True, text=True, cwd=Path(__file__).parent)
        if result.returncode == 0:
            return "‚úÖ –®–∞–≥ –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        else:
            return f"‚ùå –û—à–∏–±–∫–∞: {result.stderr}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}"

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞"""
    logging.info("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–º...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    bot_info = requests.get(f"https://api.telegram.org/bot{BOT_TOKEN}/getMe").json()
    if bot_info['ok']:
        logging.info(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @{bot_info['result']['username']}")
    else:
        logging.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ")
        return
    
    last_update_id = 0
    
    logging.info("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    
    try:
        while True:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            updates = get_updates(last_update_id + 1)
            
            if updates['ok']:
                for update in updates['result']:
                    last_update_id = update['update_id']
                    
                    if 'message' in update and 'text' in update['message']:
                        message = update['message']
                        chat_id = message['chat']['id']
                        text = message['text']
                        
                        logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text[:50]}...")
                        
                        if text.startswith('/start'):
                            # –ó–∞–ø—É—Å–∫ –∏—Å—Ç–æ—Ä–∏–∏
                            send_message(chat_id, "üöÄ –ó–∞–ø—É—Å–∫–∞—é —à–∞–≥ –∏—Å—Ç–æ—Ä–∏–∏...")
                            result = run_story_step()
                            send_message(chat_id, result)
                            
                        elif len(text) >= 10:
                            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞
                            if write_story_prompt(text):
                                send_message(chat_id, f"‚úÖ –ü—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω! –î–ª–∏–Ω–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
                            else:
                                send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞")
                        else:
                            send_message(chat_id, "‚ùå –ü—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤)")
            
            time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
            
    except KeyboardInterrupt:
        logging.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 